«IMPORT screenModel»

«DEFINE main FOR ScreenModel»

«EXPAND seite FOREACH seite»«REM»Erstellen der Seiten für jsp«ENDREM»
«EXPAND javaClass FOREACH datenstruktur»«REM»Erstellen der Datenstrukturen als Java-Code«ENDREM»

«FILE "controller/IndexServlet.java"»
package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.Servlet;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import dataobjects.*;

public class IndexServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		doPost(request, response);
	}
	
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		String param = request.getParameter("proceedAction");
		RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/«seite.first().pageName».jsp");

		if (param != null) {
			DataStorage storage = DataStorage.INSTANCE;
			try {
				switch (param) {
				«EXPAND indexCase FOREACH seite»
				}
			} catch (NumberFormatException exception) {
				// dispatcher should be left to the old page.
			}
		}

		dispatcher.forward(request, response);

	}
}

«ENDFILE»

«FILE "dataobjects/DataStorage.java"»
package dataobjects;

import java.util.HashMap;

public enum DataStorage {

	INSTANCE;
	
	private HashMap<String, Object> storage = new HashMap<>();
	
	public Object get(String key)  {
		return storage.get(key);		
	}
	
	public void set(String key, Object value) {
		storage.put(key, value);
	}

}

«ENDFILE»

«ENDDEFINE»


«DEFINE seite FOR Seite»
«FILE "WebContent/" + pageName + ".jsp"»


<%@page import="dataobjects.*"%>
<%
	// Fetch content to be displayed !
	«EXPAND fetchData FOREACH datenausgabe»
%>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
<link rel="stylesheet" media="screen,projection"
	title="Standardstylesheet" href="stylesheets/default.css"
	type="text/css" />
</head>
<body>
	<form action="index.jsp" method="post">
	«IF datenausgabe != null»
		«FOREACH datenausgabe AS ausgabe»
			<div class="object">
				<label>«ausgabe.datenobjektname.displayText»</label>
				<hr>
				«FOREACH ausgabe.datenausgabefeld AS ausgabeFeld»
				<div>
					<label>«ausgabeFeld.textfeld.displayText»</label>
					<%
						out.print(«ausgabe.datenobjekt.name».get«ausgabeFeld.ausgabefeld.attribut.name»());
					%>
				</div>
				«ENDFOREACH»
			</div>
		«ENDFOREACH»
	«ENDIF»
	«IF dateneingabe != null»
		<div class="object">
			<label>«dateneingabe.datenobjektname.displayText»</label>
			<hr>
		«FOREACH dateneingabe.dateneingabefeld AS eingabeFeld»
			<div>
				<label>«eingabeFeld.textfeld.displayText»</label> <input type="
				«IF dateneingabe.datenobjekt.datenstruktur.attribute.datentyp.contains("String")»text
				«ELSEIF dateneingabe.datenobjekt.datenstruktur.attribute.datentyp.contains("Integer")»number
				«ENDIF»" name="«eingabeFeld.eingabefeld.attribut.name»" />
			</div>
		«ENDFOREACH»
		</div>
	«ENDIF»
	«IF button != null»
		<div class="controlPanel">
			<button type="submit" name ="proceedAction" value="«pageName»">«button.displayText»</button>
		</div>
	«ENDIF»
	</form>
</body>
</html>

«ENDFILE»
«ENDDEFINE»


«DEFINE javaClass FOR Datenstruktur»
«FILE "dataobjects/" + name.toFirstUpper() + ".java"»
package dataobjects;

public class «name» {
	
	«EXPAND deklaration FOREACH attribute»
	«EXPAND getset FOREACH attribute»
}
«ENDFILE»
«ENDDEFINE»

«DEFINE deklaration FOR Attribut»
	private «datentyp» «name»;
	
«ENDDEFINE»

«DEFINE getset FOR Attribut»
	public «datentyp» get«name.toFirstUpper()»() {
		return this.«name»;
	}
	
	public void set«name.toFirstUpper()»(«datentyp» «name») {
		this.«name» = «name»;
	}
	
«ENDDEFINE»

«DEFINE fetchData FOR Datenausgabe»
	«datenobjekt.datenstruktur.name» «datenobjekt.name» = («datenobjekt.datenstruktur.name») DataStorage.INSTANCE.get("«datenobjekt.name»");
«ENDDEFINE»

«DEFINE indexCase FOR Seite»
	case "«pageName»" :
	«EXPAND indexEingabe FOR dateneingabe»
	«IF button.seite != null»
	dispatcher = getServletContext().getRequestDispatcher("/«button.seite.pageName».jsp");
	«ENDIF»
	break;
					
«ENDDEFINE»

«DEFINE indexEingabe FOR Dateneingabe»
«FOREACH datenobjekt.datenstruktur.attribute AS attribut»
	{
		«datenobjekt.datenstruktur.name» «datenobjekt.name» = («datenobjekt.datenstruktur.name») storage.get("«datenobjekt.name»");
		if («datenobjekt.name» == null) {
			«datenobjekt.name» = new «datenobjekt.datenstruktur.name»();
		}
		«IF attribut.datentyp.contains("String")»«datenobjekt.name».set«attribut.name.toFirstUpper()»(request.getParameter("«attribut.name»"));
		«ELSEIF attribut.datentyp.contains("Integer")»«datenobjekt.name».set«attribut.name.toFirstUpper()»(Integer.parseInt(request.getParameter("«attribut.name»")));
		«ENDIF»
		
		storage.set("«datenobjekt.name»", «datenobjekt.name»);
	}
«ENDFOREACH»
«ENDDEFINE»
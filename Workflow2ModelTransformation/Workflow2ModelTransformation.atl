-- @path ScreenModel=/ScreenModel/model/screenModel.ecore
-- @path WorkflowModel=/WorkflowModel/model/workflowModel.ecore

module Workflow2ModelTransformation;
create OUT : ScreenModel from IN : WorkflowModel;

rule Workflow2ScreenModel {
	from workflow: WorkflowModel!Workflow
	to screenModel: ScreenModel!ScreenModel (
		name <- workflow.name,
		seite <- workflow.zustand,
		datenobjekt <- workflow.datenobjekt,
		datenstruktur <- workflow.datenstruktur
	)
}
rule Zustand2Seite {
	from zustand: WorkflowModel!Zustand
	to seite: ScreenModel!Seite (
		pageName <- zustand.pageName,
		button <-zustand.uebergang,
		dateneingabe <- zustand.datenobjektEingabe,
		datenausgabe <- zustand.datenobjektAusgabe
	)
}
rule Datenobjekt2Dateneingabe {
	from datenobjekt: WorkflowModel!Datenobjekt
	to dateneingabe: ScreenModel2Dateneingabe ()
}
rule Uebergang2Button {
	from uebergang: WorkflowModel!Uebergang
	to button: ScreenModel!Button (
		displayText <- uebergang.name,
		seite <- uebergang.zustand
	)
}
rule Datenobjekt2Datenobjekt {
	from workflowDatenobjekt: WorkflowModel!Datenobjekt
	to screenDatenobjekt: ScreenModel!Datenobjekt (
		datenstruktur <- screenDatenobjekt.datenstruktur
	)
}
rule Datenstruktur2Datenstruktur {
	from workflowDatenstruktur: WorkflowModel!Datenstruktur
	to screenDatenstruktur: ScreenModel!Datenstruktur (
		name <- workflowDatenstruktur.name,
		attribute <- workflowDatenstruktur.attribute
	)
}
rule Attribut2Attribut {
	from workflowAttribut: WorkflowModel!Attribut
	to screenAttribut: ScreenModel!Attribut (
		name <- workflowAttribut.name,
		datentyp <- workflowAttribut.datentyp
	)
}





